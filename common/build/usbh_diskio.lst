ARM GAS  /tmp/ccufDcnU.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"usbh_diskio.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.USBH_initialize,"ax",%progbits
  17              		.align	1
  18              		.global	USBH_initialize
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	USBH_initialize:
  26              	.LVL0:
  27              	.LFB151:
  28              		.file 1 "FATFS/Target/usbh_diskio.c"
   1:FATFS/Target/usbh_diskio.c **** /**
   2:FATFS/Target/usbh_diskio.c ****   ******************************************************************************
   3:FATFS/Target/usbh_diskio.c ****   * @file    usbh_diskio.c (based on usbh_diskio_template.c v2.0.2)
   4:FATFS/Target/usbh_diskio.c ****   * @brief   USB Host Disk I/O driver
   5:FATFS/Target/usbh_diskio.c ****   ******************************************************************************
   6:FATFS/Target/usbh_diskio.c ****   * @attention
   7:FATFS/Target/usbh_diskio.c ****   *
   8:FATFS/Target/usbh_diskio.c ****   * <h2><center>&copy; Copyright (c) 2022 STMicroelectronics.
   9:FATFS/Target/usbh_diskio.c ****   * All rights reserved.</center></h2>
  10:FATFS/Target/usbh_diskio.c ****   *
  11:FATFS/Target/usbh_diskio.c ****   * This software component is licensed by ST under Ultimate Liberty license
  12:FATFS/Target/usbh_diskio.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  13:FATFS/Target/usbh_diskio.c ****   * the License. You may obtain a copy of the License at:
  14:FATFS/Target/usbh_diskio.c ****   *                             www.st.com/SLA0044
  15:FATFS/Target/usbh_diskio.c ****   *
  16:FATFS/Target/usbh_diskio.c ****   ******************************************************************************
  17:FATFS/Target/usbh_diskio.c ****   */
  18:FATFS/Target/usbh_diskio.c **** /* USER CODE BEGIN firstSection */
  19:FATFS/Target/usbh_diskio.c **** /* can be used to modify / undefine following code or add new definitions */
  20:FATFS/Target/usbh_diskio.c **** /* USER CODE END firstSection */
  21:FATFS/Target/usbh_diskio.c **** 
  22:FATFS/Target/usbh_diskio.c **** /* Includes ------------------------------------------------------------------*/
  23:FATFS/Target/usbh_diskio.c **** #include "ff_gen_drv.h"
  24:FATFS/Target/usbh_diskio.c **** #include "usbh_diskio.h"
  25:FATFS/Target/usbh_diskio.c **** 
  26:FATFS/Target/usbh_diskio.c **** /* Private typedef -----------------------------------------------------------*/
  27:FATFS/Target/usbh_diskio.c **** /* Private define ------------------------------------------------------------*/
  28:FATFS/Target/usbh_diskio.c **** 
  29:FATFS/Target/usbh_diskio.c **** #define USB_DEFAULT_BLOCK_SIZE 512
  30:FATFS/Target/usbh_diskio.c **** 
ARM GAS  /tmp/ccufDcnU.s 			page 2


  31:FATFS/Target/usbh_diskio.c **** /* Private variables ---------------------------------------------------------*/
  32:FATFS/Target/usbh_diskio.c **** extern USBH_HandleTypeDef  hUSB_Host;
  33:FATFS/Target/usbh_diskio.c **** 
  34:FATFS/Target/usbh_diskio.c **** /* Private function prototypes -----------------------------------------------*/
  35:FATFS/Target/usbh_diskio.c **** DSTATUS USBH_initialize (BYTE);
  36:FATFS/Target/usbh_diskio.c **** DSTATUS USBH_status (BYTE);
  37:FATFS/Target/usbh_diskio.c **** DRESULT USBH_read (BYTE, BYTE*, DWORD, UINT);
  38:FATFS/Target/usbh_diskio.c **** 
  39:FATFS/Target/usbh_diskio.c **** #if _USE_WRITE == 1
  40:FATFS/Target/usbh_diskio.c ****   DRESULT USBH_write (BYTE, const BYTE*, DWORD, UINT);
  41:FATFS/Target/usbh_diskio.c **** #endif /* _USE_WRITE == 1 */
  42:FATFS/Target/usbh_diskio.c **** 
  43:FATFS/Target/usbh_diskio.c **** #if _USE_IOCTL == 1
  44:FATFS/Target/usbh_diskio.c ****   DRESULT USBH_ioctl (BYTE, BYTE, void*);
  45:FATFS/Target/usbh_diskio.c **** #endif /* _USE_IOCTL == 1 */
  46:FATFS/Target/usbh_diskio.c **** 
  47:FATFS/Target/usbh_diskio.c **** const Diskio_drvTypeDef  USBH_Driver =
  48:FATFS/Target/usbh_diskio.c **** {
  49:FATFS/Target/usbh_diskio.c ****   USBH_initialize,
  50:FATFS/Target/usbh_diskio.c ****   USBH_status,
  51:FATFS/Target/usbh_diskio.c ****   USBH_read,
  52:FATFS/Target/usbh_diskio.c **** #if  _USE_WRITE == 1
  53:FATFS/Target/usbh_diskio.c ****   USBH_write,
  54:FATFS/Target/usbh_diskio.c **** #endif /* _USE_WRITE == 1 */
  55:FATFS/Target/usbh_diskio.c **** #if  _USE_IOCTL == 1
  56:FATFS/Target/usbh_diskio.c ****   USBH_ioctl,
  57:FATFS/Target/usbh_diskio.c **** #endif /* _USE_IOCTL == 1 */
  58:FATFS/Target/usbh_diskio.c **** };
  59:FATFS/Target/usbh_diskio.c **** 
  60:FATFS/Target/usbh_diskio.c **** /* USER CODE BEGIN beforeFunctionSection */
  61:FATFS/Target/usbh_diskio.c **** /* can be used to modify / undefine following code or add new code */
  62:FATFS/Target/usbh_diskio.c **** /* USER CODE END beforeFunctionSection */
  63:FATFS/Target/usbh_diskio.c **** 
  64:FATFS/Target/usbh_diskio.c **** /* Private functions ---------------------------------------------------------*/
  65:FATFS/Target/usbh_diskio.c **** 
  66:FATFS/Target/usbh_diskio.c **** /**
  67:FATFS/Target/usbh_diskio.c ****   * @brief  Initializes a Drive
  68:FATFS/Target/usbh_diskio.c ****   * @param  lun : lun id
  69:FATFS/Target/usbh_diskio.c ****   * @retval DSTATUS: Operation status
  70:FATFS/Target/usbh_diskio.c ****   */
  71:FATFS/Target/usbh_diskio.c **** DSTATUS USBH_initialize(BYTE lun)
  72:FATFS/Target/usbh_diskio.c **** {
  29              		.loc 1 72 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  73:FATFS/Target/usbh_diskio.c ****   /* CAUTION : USB Host library has to be initialized in the application */
  74:FATFS/Target/usbh_diskio.c **** 
  75:FATFS/Target/usbh_diskio.c ****   return RES_OK;
  34              		.loc 1 75 3 view .LVU1
  76:FATFS/Target/usbh_diskio.c **** }
  35              		.loc 1 76 1 is_stmt 0 view .LVU2
  36 0000 0020     		movs	r0, #0
  37              	.LVL1:
  38              		.loc 1 76 1 view .LVU3
  39 0002 7047     		bx	lr
ARM GAS  /tmp/ccufDcnU.s 			page 3


  40              		.cfi_endproc
  41              	.LFE151:
  43              		.section	.text.USBH_status,"ax",%progbits
  44              		.align	1
  45              		.global	USBH_status
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv5-d16
  51              	USBH_status:
  52              	.LVL2:
  53              	.LFB152:
  77:FATFS/Target/usbh_diskio.c **** 
  78:FATFS/Target/usbh_diskio.c **** /**
  79:FATFS/Target/usbh_diskio.c ****   * @brief  Gets Disk Status
  80:FATFS/Target/usbh_diskio.c ****   * @param  lun : lun id
  81:FATFS/Target/usbh_diskio.c ****   * @retval DSTATUS: Operation status
  82:FATFS/Target/usbh_diskio.c ****   */
  83:FATFS/Target/usbh_diskio.c **** DSTATUS USBH_status(BYTE lun)
  84:FATFS/Target/usbh_diskio.c **** {
  54              		.loc 1 84 1 is_stmt 1 view -0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		.loc 1 84 1 is_stmt 0 view .LVU5
  59 0000 08B5     		push	{r3, lr}
  60              	.LCFI0:
  61              		.cfi_def_cfa_offset 8
  62              		.cfi_offset 3, -8
  63              		.cfi_offset 14, -4
  64 0002 0146     		mov	r1, r0
  85:FATFS/Target/usbh_diskio.c ****   DRESULT res = RES_ERROR;
  65              		.loc 1 85 3 is_stmt 1 view .LVU6
  66              	.LVL3:
  86:FATFS/Target/usbh_diskio.c **** 
  87:FATFS/Target/usbh_diskio.c ****   if(USBH_MSC_UnitIsReady(&hUSB_Host, lun))
  67              		.loc 1 87 3 view .LVU7
  68              		.loc 1 87 6 is_stmt 0 view .LVU8
  69 0004 0348     		ldr	r0, .L6
  70              	.LVL4:
  71              		.loc 1 87 6 view .LVU9
  72 0006 FFF7FEFF 		bl	USBH_MSC_UnitIsReady
  73              	.LVL5:
  74              		.loc 1 87 5 view .LVU10
  75 000a 08B1     		cbz	r0, .L4
  88:FATFS/Target/usbh_diskio.c ****   {
  89:FATFS/Target/usbh_diskio.c ****     res = RES_OK;
  76              		.loc 1 89 9 view .LVU11
  77 000c 0020     		movs	r0, #0
  78              	.L3:
  79              	.LVL6:
  90:FATFS/Target/usbh_diskio.c ****   }
  91:FATFS/Target/usbh_diskio.c ****   else
  92:FATFS/Target/usbh_diskio.c ****   {
  93:FATFS/Target/usbh_diskio.c ****     res = RES_ERROR;
  94:FATFS/Target/usbh_diskio.c ****   }
  95:FATFS/Target/usbh_diskio.c **** 
ARM GAS  /tmp/ccufDcnU.s 			page 4


  96:FATFS/Target/usbh_diskio.c ****   return res;
  80              		.loc 1 96 3 is_stmt 1 view .LVU12
  97:FATFS/Target/usbh_diskio.c **** }
  81              		.loc 1 97 1 is_stmt 0 view .LVU13
  82 000e 08BD     		pop	{r3, pc}
  83              	.LVL7:
  84              	.L4:
  93:FATFS/Target/usbh_diskio.c ****   }
  85              		.loc 1 93 9 view .LVU14
  86 0010 0120     		movs	r0, #1
  87 0012 FCE7     		b	.L3
  88              	.L7:
  89              		.align	2
  90              	.L6:
  91 0014 00000000 		.word	hUsbHostFS
  92              		.cfi_endproc
  93              	.LFE152:
  95              		.section	.text.USBH_read,"ax",%progbits
  96              		.align	1
  97              		.global	USBH_read
  98              		.syntax unified
  99              		.thumb
 100              		.thumb_func
 101              		.fpu fpv5-d16
 103              	USBH_read:
 104              	.LVL8:
 105              	.LFB153:
  98:FATFS/Target/usbh_diskio.c **** 
  99:FATFS/Target/usbh_diskio.c **** /* USER CODE BEGIN beforeReadSection */
 100:FATFS/Target/usbh_diskio.c **** /* can be used to modify previous code / undefine following code / add new code */
 101:FATFS/Target/usbh_diskio.c **** /* USER CODE END beforeReadSection */
 102:FATFS/Target/usbh_diskio.c **** 
 103:FATFS/Target/usbh_diskio.c **** /**
 104:FATFS/Target/usbh_diskio.c ****   * @brief  Reads Sector(s)
 105:FATFS/Target/usbh_diskio.c ****   * @param  lun : lun id
 106:FATFS/Target/usbh_diskio.c ****   * @param  *buff: Data buffer to store read data
 107:FATFS/Target/usbh_diskio.c ****   * @param  sector: Sector address (LBA)
 108:FATFS/Target/usbh_diskio.c ****   * @param  count: Number of sectors to read (1..128)
 109:FATFS/Target/usbh_diskio.c ****   * @retval DRESULT: Operation result
 110:FATFS/Target/usbh_diskio.c ****   */
 111:FATFS/Target/usbh_diskio.c **** DRESULT USBH_read(BYTE lun, BYTE *buff, DWORD sector, UINT count)
 112:FATFS/Target/usbh_diskio.c **** {
 106              		.loc 1 112 1 is_stmt 1 view -0
 107              		.cfi_startproc
 108              		@ args = 0, pretend = 0, frame = 56
 109              		@ frame_needed = 0, uses_anonymous_args = 0
 110              		.loc 1 112 1 is_stmt 0 view .LVU16
 111 0000 10B5     		push	{r4, lr}
 112              	.LCFI1:
 113              		.cfi_def_cfa_offset 8
 114              		.cfi_offset 4, -8
 115              		.cfi_offset 14, -4
 116 0002 90B0     		sub	sp, sp, #64
 117              	.LCFI2:
 118              		.cfi_def_cfa_offset 72
 119 0004 0446     		mov	r4, r0
 113:FATFS/Target/usbh_diskio.c ****   DRESULT res = RES_ERROR;
ARM GAS  /tmp/ccufDcnU.s 			page 5


 120              		.loc 1 113 3 is_stmt 1 view .LVU17
 121              	.LVL9:
 114:FATFS/Target/usbh_diskio.c ****   MSC_LUNTypeDef info;
 122              		.loc 1 114 3 view .LVU18
 115:FATFS/Target/usbh_diskio.c **** 
 116:FATFS/Target/usbh_diskio.c ****   if(USBH_MSC_Read(&hUSB_Host, lun, sector, buff, count) == USBH_OK)
 123              		.loc 1 116 3 view .LVU19
 124              		.loc 1 116 6 is_stmt 0 view .LVU20
 125 0006 0093     		str	r3, [sp]
 126 0008 0B46     		mov	r3, r1
 127              	.LVL10:
 128              		.loc 1 116 6 view .LVU21
 129 000a 0146     		mov	r1, r0
 130              	.LVL11:
 131              		.loc 1 116 6 view .LVU22
 132 000c 0D48     		ldr	r0, .L16
 133              	.LVL12:
 134              		.loc 1 116 6 view .LVU23
 135 000e FFF7FEFF 		bl	USBH_MSC_Read
 136              	.LVL13:
 137              		.loc 1 116 5 view .LVU24
 138 0012 08B9     		cbnz	r0, .L14
 139              	.L9:
 140              	.LVL14:
 117:FATFS/Target/usbh_diskio.c ****   {
 118:FATFS/Target/usbh_diskio.c ****     res = RES_OK;
 119:FATFS/Target/usbh_diskio.c ****   }
 120:FATFS/Target/usbh_diskio.c ****   else
 121:FATFS/Target/usbh_diskio.c ****   {
 122:FATFS/Target/usbh_diskio.c ****     USBH_MSC_GetLUNInfo(&hUSB_Host, lun, &info);
 123:FATFS/Target/usbh_diskio.c **** 
 124:FATFS/Target/usbh_diskio.c ****     switch (info.sense.asc)
 125:FATFS/Target/usbh_diskio.c ****     {
 126:FATFS/Target/usbh_diskio.c ****     case SCSI_ASC_LOGICAL_UNIT_NOT_READY:
 127:FATFS/Target/usbh_diskio.c ****     case SCSI_ASC_MEDIUM_NOT_PRESENT:
 128:FATFS/Target/usbh_diskio.c ****     case SCSI_ASC_NOT_READY_TO_READY_CHANGE:
 129:FATFS/Target/usbh_diskio.c ****       USBH_ErrLog ("USB Disk is not ready!");
 130:FATFS/Target/usbh_diskio.c ****       res = RES_NOTRDY;
 131:FATFS/Target/usbh_diskio.c ****       break;
 132:FATFS/Target/usbh_diskio.c **** 
 133:FATFS/Target/usbh_diskio.c ****     default:
 134:FATFS/Target/usbh_diskio.c ****       res = RES_ERROR;
 135:FATFS/Target/usbh_diskio.c ****       break;
 136:FATFS/Target/usbh_diskio.c ****     }
 137:FATFS/Target/usbh_diskio.c ****   }
 138:FATFS/Target/usbh_diskio.c **** 
 139:FATFS/Target/usbh_diskio.c ****   return res;
 141              		.loc 1 139 3 is_stmt 1 view .LVU25
 140:FATFS/Target/usbh_diskio.c **** }
 142              		.loc 1 140 1 is_stmt 0 view .LVU26
 143 0014 10B0     		add	sp, sp, #64
 144              	.LCFI3:
 145              		.cfi_remember_state
 146              		.cfi_def_cfa_offset 8
 147              		@ sp needed
 148 0016 10BD     		pop	{r4, pc}
 149              	.LVL15:
ARM GAS  /tmp/ccufDcnU.s 			page 6


 150              	.L14:
 151              	.LCFI4:
 152              		.cfi_restore_state
 122:FATFS/Target/usbh_diskio.c **** 
 153              		.loc 1 122 5 is_stmt 1 view .LVU27
 154 0018 03AA     		add	r2, sp, #12
 155 001a 2146     		mov	r1, r4
 156 001c 0948     		ldr	r0, .L16
 157 001e FFF7FEFF 		bl	USBH_MSC_GetLUNInfo
 158              	.LVL16:
 124:FATFS/Target/usbh_diskio.c ****     {
 159              		.loc 1 124 5 view .LVU28
 124:FATFS/Target/usbh_diskio.c ****     {
 160              		.loc 1 124 23 is_stmt 0 view .LVU29
 161 0022 9DF81930 		ldrb	r3, [sp, #25]	@ zero_extendqisi2
 124:FATFS/Target/usbh_diskio.c ****     {
 162              		.loc 1 124 5 view .LVU30
 163 0026 282B     		cmp	r3, #40
 164 0028 07D0     		beq	.L10
 165 002a 3A2B     		cmp	r3, #58
 166 002c 07D0     		beq	.L11
 167 002e 042B     		cmp	r3, #4
 168 0030 01D0     		beq	.L15
 134:FATFS/Target/usbh_diskio.c ****       break;
 169              		.loc 1 134 11 view .LVU31
 170 0032 0120     		movs	r0, #1
 171 0034 EEE7     		b	.L9
 172              	.L15:
 124:FATFS/Target/usbh_diskio.c ****     {
 173              		.loc 1 124 5 view .LVU32
 174 0036 0320     		movs	r0, #3
 175 0038 ECE7     		b	.L9
 176              	.L10:
 177 003a 0320     		movs	r0, #3
 178 003c EAE7     		b	.L9
 179              	.L11:
 180 003e 0320     		movs	r0, #3
 181 0040 E8E7     		b	.L9
 182              	.L17:
 183 0042 00BF     		.align	2
 184              	.L16:
 185 0044 00000000 		.word	hUsbHostFS
 186              		.cfi_endproc
 187              	.LFE153:
 189              		.section	.text.USBH_ioctl,"ax",%progbits
 190              		.align	1
 191              		.global	USBH_ioctl
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 195              		.fpu fpv5-d16
 197              	USBH_ioctl:
 198              	.LVL17:
 199              	.LFB155:
 141:FATFS/Target/usbh_diskio.c **** 
 142:FATFS/Target/usbh_diskio.c **** /* USER CODE BEGIN beforeWriteSection */
 143:FATFS/Target/usbh_diskio.c **** /* can be used to modify previous code / undefine following code / add new code */
ARM GAS  /tmp/ccufDcnU.s 			page 7


 144:FATFS/Target/usbh_diskio.c **** /* USER CODE END beforeWriteSection */
 145:FATFS/Target/usbh_diskio.c **** 
 146:FATFS/Target/usbh_diskio.c **** /**
 147:FATFS/Target/usbh_diskio.c ****   * @brief  Writes Sector(s)
 148:FATFS/Target/usbh_diskio.c ****   * @param  lun : lun id
 149:FATFS/Target/usbh_diskio.c ****   * @param  *buff: Data to be written
 150:FATFS/Target/usbh_diskio.c ****   * @param  sector: Sector address (LBA)
 151:FATFS/Target/usbh_diskio.c ****   * @param  count: Number of sectors to write (1..128)
 152:FATFS/Target/usbh_diskio.c ****   * @retval DRESULT: Operation result
 153:FATFS/Target/usbh_diskio.c ****   */
 154:FATFS/Target/usbh_diskio.c **** #if _USE_WRITE == 1
 155:FATFS/Target/usbh_diskio.c **** DRESULT USBH_write(BYTE lun, const BYTE *buff, DWORD sector, UINT count)
 156:FATFS/Target/usbh_diskio.c **** {
 157:FATFS/Target/usbh_diskio.c ****   DRESULT res = RES_ERROR;
 158:FATFS/Target/usbh_diskio.c ****   MSC_LUNTypeDef info;
 159:FATFS/Target/usbh_diskio.c **** 
 160:FATFS/Target/usbh_diskio.c ****   if(USBH_MSC_Write(&hUSB_Host, lun, sector, (BYTE *)buff, count) == USBH_OK)
 161:FATFS/Target/usbh_diskio.c ****   {
 162:FATFS/Target/usbh_diskio.c ****     res = RES_OK;
 163:FATFS/Target/usbh_diskio.c ****   }
 164:FATFS/Target/usbh_diskio.c ****   else
 165:FATFS/Target/usbh_diskio.c ****   {
 166:FATFS/Target/usbh_diskio.c ****     USBH_MSC_GetLUNInfo(&hUSB_Host, lun, &info);
 167:FATFS/Target/usbh_diskio.c **** 
 168:FATFS/Target/usbh_diskio.c ****     switch (info.sense.asc)
 169:FATFS/Target/usbh_diskio.c ****     {
 170:FATFS/Target/usbh_diskio.c ****     case SCSI_ASC_WRITE_PROTECTED:
 171:FATFS/Target/usbh_diskio.c ****       USBH_ErrLog("USB Disk is Write protected!");
 172:FATFS/Target/usbh_diskio.c ****       res = RES_WRPRT;
 173:FATFS/Target/usbh_diskio.c ****       break;
 174:FATFS/Target/usbh_diskio.c **** 
 175:FATFS/Target/usbh_diskio.c ****     case SCSI_ASC_LOGICAL_UNIT_NOT_READY:
 176:FATFS/Target/usbh_diskio.c ****     case SCSI_ASC_MEDIUM_NOT_PRESENT:
 177:FATFS/Target/usbh_diskio.c ****     case SCSI_ASC_NOT_READY_TO_READY_CHANGE:
 178:FATFS/Target/usbh_diskio.c ****       USBH_ErrLog("USB Disk is not ready!");
 179:FATFS/Target/usbh_diskio.c ****       res = RES_NOTRDY;
 180:FATFS/Target/usbh_diskio.c ****       break;
 181:FATFS/Target/usbh_diskio.c **** 
 182:FATFS/Target/usbh_diskio.c ****     default:
 183:FATFS/Target/usbh_diskio.c ****       res = RES_ERROR;
 184:FATFS/Target/usbh_diskio.c ****       break;
 185:FATFS/Target/usbh_diskio.c ****     }
 186:FATFS/Target/usbh_diskio.c ****   }
 187:FATFS/Target/usbh_diskio.c **** 
 188:FATFS/Target/usbh_diskio.c ****   return res;
 189:FATFS/Target/usbh_diskio.c **** }
 190:FATFS/Target/usbh_diskio.c **** #endif /* _USE_WRITE == 1 */
 191:FATFS/Target/usbh_diskio.c **** 
 192:FATFS/Target/usbh_diskio.c **** /* USER CODE BEGIN beforeIoctlSection */
 193:FATFS/Target/usbh_diskio.c **** /* can be used to modify previous code / undefine following code / add new code */
 194:FATFS/Target/usbh_diskio.c **** /* USER CODE END beforeIoctlSection */
 195:FATFS/Target/usbh_diskio.c **** 
 196:FATFS/Target/usbh_diskio.c **** /**
 197:FATFS/Target/usbh_diskio.c ****   * @brief  I/O control operation
 198:FATFS/Target/usbh_diskio.c ****   * @param  lun : lun id
 199:FATFS/Target/usbh_diskio.c ****   * @param  cmd: Control code
 200:FATFS/Target/usbh_diskio.c ****   * @param  *buff: Buffer to send/receive control data
ARM GAS  /tmp/ccufDcnU.s 			page 8


 201:FATFS/Target/usbh_diskio.c ****   * @retval DRESULT: Operation result
 202:FATFS/Target/usbh_diskio.c ****   */
 203:FATFS/Target/usbh_diskio.c **** #if _USE_IOCTL == 1
 204:FATFS/Target/usbh_diskio.c **** DRESULT USBH_ioctl(BYTE lun, BYTE cmd, void *buff)
 205:FATFS/Target/usbh_diskio.c **** {
 200              		.loc 1 205 1 is_stmt 1 view -0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 56
 203              		@ frame_needed = 0, uses_anonymous_args = 0
 204              		.loc 1 205 1 is_stmt 0 view .LVU34
 205 0000 30B5     		push	{r4, r5, lr}
 206              	.LCFI5:
 207              		.cfi_def_cfa_offset 12
 208              		.cfi_offset 4, -12
 209              		.cfi_offset 5, -8
 210              		.cfi_offset 14, -4
 211 0002 8FB0     		sub	sp, sp, #60
 212              	.LCFI6:
 213              		.cfi_def_cfa_offset 72
 214 0004 0C46     		mov	r4, r1
 215 0006 1546     		mov	r5, r2
 206:FATFS/Target/usbh_diskio.c ****   DRESULT res = RES_ERROR;
 216              		.loc 1 206 3 is_stmt 1 view .LVU35
 217              	.LVL18:
 207:FATFS/Target/usbh_diskio.c ****   MSC_LUNTypeDef info;
 218              		.loc 1 207 3 view .LVU36
 208:FATFS/Target/usbh_diskio.c **** 
 209:FATFS/Target/usbh_diskio.c ****   switch (cmd)
 219              		.loc 1 209 3 view .LVU37
 220 0008 0329     		cmp	r1, #3
 221 000a 24D8     		bhi	.L25
 222 000c DFE801F0 		tbb	[pc, r1]
 223              	.L21:
 224 0010 02       		.byte	(.L24-.L21)/2
 225 0011 05       		.byte	(.L23-.L21)/2
 226 0012 0E       		.byte	(.L22-.L21)/2
 227 0013 18       		.byte	(.L20-.L21)/2
 228              		.p2align 1
 229              	.L24:
 205:FATFS/Target/usbh_diskio.c ****   DRESULT res = RES_ERROR;
 230              		.loc 1 205 1 is_stmt 0 view .LVU38
 231 0014 0846     		mov	r0, r1
 232              	.LVL19:
 233              	.L19:
 210:FATFS/Target/usbh_diskio.c ****   {
 211:FATFS/Target/usbh_diskio.c ****   /* Make sure that no pending write process */
 212:FATFS/Target/usbh_diskio.c ****   case CTRL_SYNC:
 213:FATFS/Target/usbh_diskio.c ****     res = RES_OK;
 214:FATFS/Target/usbh_diskio.c ****     break;
 215:FATFS/Target/usbh_diskio.c **** 
 216:FATFS/Target/usbh_diskio.c ****   /* Get number of sectors on the disk (DWORD) */
 217:FATFS/Target/usbh_diskio.c ****   case GET_SECTOR_COUNT :
 218:FATFS/Target/usbh_diskio.c ****     if(USBH_MSC_GetLUNInfo(&hUSB_Host, lun, &info) == USBH_OK)
 219:FATFS/Target/usbh_diskio.c ****     {
 220:FATFS/Target/usbh_diskio.c ****       *(DWORD*)buff = info.capacity.block_nbr;
 221:FATFS/Target/usbh_diskio.c ****       res = RES_OK;
 222:FATFS/Target/usbh_diskio.c ****     }
ARM GAS  /tmp/ccufDcnU.s 			page 9


 223:FATFS/Target/usbh_diskio.c ****     else
 224:FATFS/Target/usbh_diskio.c ****     {
 225:FATFS/Target/usbh_diskio.c ****       res = RES_ERROR;
 226:FATFS/Target/usbh_diskio.c ****     }
 227:FATFS/Target/usbh_diskio.c ****     break;
 228:FATFS/Target/usbh_diskio.c **** 
 229:FATFS/Target/usbh_diskio.c ****   /* Get R/W sector size (WORD) */
 230:FATFS/Target/usbh_diskio.c ****   case GET_SECTOR_SIZE :
 231:FATFS/Target/usbh_diskio.c ****     if(USBH_MSC_GetLUNInfo(&hUSB_Host, lun, &info) == USBH_OK)
 232:FATFS/Target/usbh_diskio.c ****     {
 233:FATFS/Target/usbh_diskio.c ****       *(DWORD*)buff = info.capacity.block_size;
 234:FATFS/Target/usbh_diskio.c ****       res = RES_OK;
 235:FATFS/Target/usbh_diskio.c ****     }
 236:FATFS/Target/usbh_diskio.c ****     else
 237:FATFS/Target/usbh_diskio.c ****     {
 238:FATFS/Target/usbh_diskio.c ****       res = RES_ERROR;
 239:FATFS/Target/usbh_diskio.c ****     }
 240:FATFS/Target/usbh_diskio.c ****     break;
 241:FATFS/Target/usbh_diskio.c **** 
 242:FATFS/Target/usbh_diskio.c ****     /* Get erase block size in unit of sector (DWORD) */
 243:FATFS/Target/usbh_diskio.c ****   case GET_BLOCK_SIZE :
 244:FATFS/Target/usbh_diskio.c **** 
 245:FATFS/Target/usbh_diskio.c ****     if(USBH_MSC_GetLUNInfo(&hUSB_Host, lun, &info) == USBH_OK)
 246:FATFS/Target/usbh_diskio.c ****     {
 247:FATFS/Target/usbh_diskio.c ****       *(DWORD*)buff = info.capacity.block_size / USB_DEFAULT_BLOCK_SIZE;
 248:FATFS/Target/usbh_diskio.c ****       res = RES_OK;
 249:FATFS/Target/usbh_diskio.c ****     }
 250:FATFS/Target/usbh_diskio.c ****     else
 251:FATFS/Target/usbh_diskio.c ****     {
 252:FATFS/Target/usbh_diskio.c ****       res = RES_ERROR;
 253:FATFS/Target/usbh_diskio.c ****     }
 254:FATFS/Target/usbh_diskio.c ****     break;
 255:FATFS/Target/usbh_diskio.c **** 
 256:FATFS/Target/usbh_diskio.c ****   default:
 257:FATFS/Target/usbh_diskio.c ****     res = RES_PARERR;
 258:FATFS/Target/usbh_diskio.c ****   }
 259:FATFS/Target/usbh_diskio.c **** 
 260:FATFS/Target/usbh_diskio.c ****   return res;
 234              		.loc 1 260 3 is_stmt 1 view .LVU39
 261:FATFS/Target/usbh_diskio.c **** }
 235              		.loc 1 261 1 is_stmt 0 view .LVU40
 236 0016 0FB0     		add	sp, sp, #60
 237              	.LCFI7:
 238              		.cfi_remember_state
 239              		.cfi_def_cfa_offset 12
 240              		@ sp needed
 241 0018 30BD     		pop	{r4, r5, pc}
 242              	.LVL20:
 243              	.L23:
 244              	.LCFI8:
 245              		.cfi_restore_state
 218:FATFS/Target/usbh_diskio.c ****     {
 246              		.loc 1 218 5 is_stmt 1 view .LVU41
 218:FATFS/Target/usbh_diskio.c ****     {
 247              		.loc 1 218 8 is_stmt 0 view .LVU42
 248 001a 01AA     		add	r2, sp, #4
 249              	.LVL21:
ARM GAS  /tmp/ccufDcnU.s 			page 10


 218:FATFS/Target/usbh_diskio.c ****     {
 250              		.loc 1 218 8 view .LVU43
 251 001c 0146     		mov	r1, r0
 252              	.LVL22:
 218:FATFS/Target/usbh_diskio.c ****     {
 253              		.loc 1 218 8 view .LVU44
 254 001e 1248     		ldr	r0, .L30
 255              	.LVL23:
 218:FATFS/Target/usbh_diskio.c ****     {
 256              		.loc 1 218 8 view .LVU45
 257 0020 FFF7FEFF 		bl	USBH_MSC_GetLUNInfo
 258              	.LVL24:
 218:FATFS/Target/usbh_diskio.c ****     {
 259              		.loc 1 218 7 view .LVU46
 260 0024 C8B9     		cbnz	r0, .L26
 220:FATFS/Target/usbh_diskio.c ****       res = RES_OK;
 261              		.loc 1 220 7 is_stmt 1 view .LVU47
 220:FATFS/Target/usbh_diskio.c ****       res = RES_OK;
 262              		.loc 1 220 36 is_stmt 0 view .LVU48
 263 0026 029B     		ldr	r3, [sp, #8]
 220:FATFS/Target/usbh_diskio.c ****       res = RES_OK;
 264              		.loc 1 220 21 view .LVU49
 265 0028 2B60     		str	r3, [r5]
 221:FATFS/Target/usbh_diskio.c ****     }
 266              		.loc 1 221 7 is_stmt 1 view .LVU50
 267              	.LVL25:
 221:FATFS/Target/usbh_diskio.c ****     }
 268              		.loc 1 221 7 is_stmt 0 view .LVU51
 269 002a F4E7     		b	.L19
 270              	.LVL26:
 271              	.L22:
 231:FATFS/Target/usbh_diskio.c ****     {
 272              		.loc 1 231 5 is_stmt 1 view .LVU52
 231:FATFS/Target/usbh_diskio.c ****     {
 273              		.loc 1 231 8 is_stmt 0 view .LVU53
 274 002c 01AA     		add	r2, sp, #4
 275              	.LVL27:
 231:FATFS/Target/usbh_diskio.c ****     {
 276              		.loc 1 231 8 view .LVU54
 277 002e 0146     		mov	r1, r0
 278              	.LVL28:
 231:FATFS/Target/usbh_diskio.c ****     {
 279              		.loc 1 231 8 view .LVU55
 280 0030 0D48     		ldr	r0, .L30
 281              	.LVL29:
 231:FATFS/Target/usbh_diskio.c ****     {
 282              		.loc 1 231 8 view .LVU56
 283 0032 FFF7FEFF 		bl	USBH_MSC_GetLUNInfo
 284              	.LVL30:
 231:FATFS/Target/usbh_diskio.c ****     {
 285              		.loc 1 231 7 view .LVU57
 286 0036 90B9     		cbnz	r0, .L27
 233:FATFS/Target/usbh_diskio.c ****       res = RES_OK;
 287              		.loc 1 233 7 is_stmt 1 view .LVU58
 233:FATFS/Target/usbh_diskio.c ****       res = RES_OK;
 288              		.loc 1 233 36 is_stmt 0 view .LVU59
 289 0038 BDF80C30 		ldrh	r3, [sp, #12]
ARM GAS  /tmp/ccufDcnU.s 			page 11


 233:FATFS/Target/usbh_diskio.c ****       res = RES_OK;
 290              		.loc 1 233 21 view .LVU60
 291 003c 2B60     		str	r3, [r5]
 234:FATFS/Target/usbh_diskio.c ****     }
 292              		.loc 1 234 7 is_stmt 1 view .LVU61
 293              	.LVL31:
 234:FATFS/Target/usbh_diskio.c ****     }
 294              		.loc 1 234 7 is_stmt 0 view .LVU62
 295 003e EAE7     		b	.L19
 296              	.LVL32:
 297              	.L20:
 245:FATFS/Target/usbh_diskio.c ****     {
 298              		.loc 1 245 5 is_stmt 1 view .LVU63
 245:FATFS/Target/usbh_diskio.c ****     {
 299              		.loc 1 245 8 is_stmt 0 view .LVU64
 300 0040 01AA     		add	r2, sp, #4
 301              	.LVL33:
 245:FATFS/Target/usbh_diskio.c ****     {
 302              		.loc 1 245 8 view .LVU65
 303 0042 0146     		mov	r1, r0
 304              	.LVL34:
 245:FATFS/Target/usbh_diskio.c ****     {
 305              		.loc 1 245 8 view .LVU66
 306 0044 0848     		ldr	r0, .L30
 307              	.LVL35:
 245:FATFS/Target/usbh_diskio.c ****     {
 308              		.loc 1 245 8 view .LVU67
 309 0046 FFF7FEFF 		bl	USBH_MSC_GetLUNInfo
 310              	.LVL36:
 245:FATFS/Target/usbh_diskio.c ****     {
 311              		.loc 1 245 7 view .LVU68
 312 004a 50B9     		cbnz	r0, .L28
 247:FATFS/Target/usbh_diskio.c ****       res = RES_OK;
 313              		.loc 1 247 7 is_stmt 1 view .LVU69
 247:FATFS/Target/usbh_diskio.c ****       res = RES_OK;
 314              		.loc 1 247 36 is_stmt 0 view .LVU70
 315 004c BDF80C30 		ldrh	r3, [sp, #12]
 247:FATFS/Target/usbh_diskio.c ****       res = RES_OK;
 316              		.loc 1 247 48 view .LVU71
 317 0050 5B0A     		lsrs	r3, r3, #9
 247:FATFS/Target/usbh_diskio.c ****       res = RES_OK;
 318              		.loc 1 247 21 view .LVU72
 319 0052 2B60     		str	r3, [r5]
 248:FATFS/Target/usbh_diskio.c ****     }
 320              		.loc 1 248 7 is_stmt 1 view .LVU73
 321              	.LVL37:
 248:FATFS/Target/usbh_diskio.c ****     }
 322              		.loc 1 248 7 is_stmt 0 view .LVU74
 323 0054 DFE7     		b	.L19
 324              	.LVL38:
 325              	.L25:
 257:FATFS/Target/usbh_diskio.c ****   }
 326              		.loc 1 257 9 view .LVU75
 327 0056 0420     		movs	r0, #4
 328              	.LVL39:
 257:FATFS/Target/usbh_diskio.c ****   }
 329              		.loc 1 257 9 view .LVU76
ARM GAS  /tmp/ccufDcnU.s 			page 12


 330 0058 DDE7     		b	.L19
 331              	.LVL40:
 332              	.L26:
 225:FATFS/Target/usbh_diskio.c ****     }
 333              		.loc 1 225 11 view .LVU77
 334 005a 2046     		mov	r0, r4
 335 005c DBE7     		b	.L19
 336              	.L27:
 238:FATFS/Target/usbh_diskio.c ****     }
 337              		.loc 1 238 11 view .LVU78
 338 005e 0120     		movs	r0, #1
 339 0060 D9E7     		b	.L19
 340              	.L28:
 252:FATFS/Target/usbh_diskio.c ****     }
 341              		.loc 1 252 11 view .LVU79
 342 0062 0120     		movs	r0, #1
 343 0064 D7E7     		b	.L19
 344              	.L31:
 345 0066 00BF     		.align	2
 346              	.L30:
 347 0068 00000000 		.word	hUsbHostFS
 348              		.cfi_endproc
 349              	.LFE155:
 351              		.section	.text.USBH_write,"ax",%progbits
 352              		.align	1
 353              		.global	USBH_write
 354              		.syntax unified
 355              		.thumb
 356              		.thumb_func
 357              		.fpu fpv5-d16
 359              	USBH_write:
 360              	.LVL41:
 361              	.LFB154:
 156:FATFS/Target/usbh_diskio.c ****   DRESULT res = RES_ERROR;
 362              		.loc 1 156 1 is_stmt 1 view -0
 363              		.cfi_startproc
 364              		@ args = 0, pretend = 0, frame = 56
 365              		@ frame_needed = 0, uses_anonymous_args = 0
 156:FATFS/Target/usbh_diskio.c ****   DRESULT res = RES_ERROR;
 366              		.loc 1 156 1 is_stmt 0 view .LVU81
 367 0000 10B5     		push	{r4, lr}
 368              	.LCFI9:
 369              		.cfi_def_cfa_offset 8
 370              		.cfi_offset 4, -8
 371              		.cfi_offset 14, -4
 372 0002 90B0     		sub	sp, sp, #64
 373              	.LCFI10:
 374              		.cfi_def_cfa_offset 72
 375 0004 0446     		mov	r4, r0
 157:FATFS/Target/usbh_diskio.c ****   MSC_LUNTypeDef info;
 376              		.loc 1 157 3 is_stmt 1 view .LVU82
 377              	.LVL42:
 158:FATFS/Target/usbh_diskio.c **** 
 378              		.loc 1 158 3 view .LVU83
 160:FATFS/Target/usbh_diskio.c ****   {
 379              		.loc 1 160 3 view .LVU84
 160:FATFS/Target/usbh_diskio.c ****   {
ARM GAS  /tmp/ccufDcnU.s 			page 13


 380              		.loc 1 160 6 is_stmt 0 view .LVU85
 381 0006 0093     		str	r3, [sp]
 382 0008 0B46     		mov	r3, r1
 383              	.LVL43:
 160:FATFS/Target/usbh_diskio.c ****   {
 384              		.loc 1 160 6 view .LVU86
 385 000a 0146     		mov	r1, r0
 386              	.LVL44:
 160:FATFS/Target/usbh_diskio.c ****   {
 387              		.loc 1 160 6 view .LVU87
 388 000c 1048     		ldr	r0, .L43
 389              	.LVL45:
 160:FATFS/Target/usbh_diskio.c ****   {
 390              		.loc 1 160 6 view .LVU88
 391 000e FFF7FEFF 		bl	USBH_MSC_Write
 392              	.LVL46:
 160:FATFS/Target/usbh_diskio.c ****   {
 393              		.loc 1 160 5 view .LVU89
 394 0012 08B9     		cbnz	r0, .L40
 395              	.L33:
 396              	.LVL47:
 188:FATFS/Target/usbh_diskio.c **** }
 397              		.loc 1 188 3 is_stmt 1 view .LVU90
 189:FATFS/Target/usbh_diskio.c **** #endif /* _USE_WRITE == 1 */
 398              		.loc 1 189 1 is_stmt 0 view .LVU91
 399 0014 10B0     		add	sp, sp, #64
 400              	.LCFI11:
 401              		.cfi_remember_state
 402              		.cfi_def_cfa_offset 8
 403              		@ sp needed
 404 0016 10BD     		pop	{r4, pc}
 405              	.LVL48:
 406              	.L40:
 407              	.LCFI12:
 408              		.cfi_restore_state
 166:FATFS/Target/usbh_diskio.c **** 
 409              		.loc 1 166 5 is_stmt 1 view .LVU92
 410 0018 03AA     		add	r2, sp, #12
 411 001a 2146     		mov	r1, r4
 412 001c 0C48     		ldr	r0, .L43
 413 001e FFF7FEFF 		bl	USBH_MSC_GetLUNInfo
 414              	.LVL49:
 168:FATFS/Target/usbh_diskio.c ****     {
 415              		.loc 1 168 5 view .LVU93
 168:FATFS/Target/usbh_diskio.c ****     {
 416              		.loc 1 168 23 is_stmt 0 view .LVU94
 417 0022 9DF81930 		ldrb	r3, [sp, #25]	@ zero_extendqisi2
 168:FATFS/Target/usbh_diskio.c ****     {
 418              		.loc 1 168 5 view .LVU95
 419 0026 272B     		cmp	r3, #39
 420 0028 0CD0     		beq	.L35
 421 002a 05D9     		bls	.L41
 422 002c 282B     		cmp	r3, #40
 423 002e 0BD0     		beq	.L37
 424 0030 3A2B     		cmp	r3, #58
 425 0032 0BD1     		bne	.L38
 179:FATFS/Target/usbh_diskio.c ****       break;
ARM GAS  /tmp/ccufDcnU.s 			page 14


 426              		.loc 1 179 11 view .LVU96
 427 0034 0320     		movs	r0, #3
 428 0036 EDE7     		b	.L33
 429              	.L41:
 168:FATFS/Target/usbh_diskio.c ****     {
 430              		.loc 1 168 5 view .LVU97
 431 0038 042B     		cmp	r3, #4
 432 003a 01D0     		beq	.L42
 183:FATFS/Target/usbh_diskio.c ****       break;
 433              		.loc 1 183 11 view .LVU98
 434 003c 0120     		movs	r0, #1
 435 003e E9E7     		b	.L33
 436              	.L42:
 179:FATFS/Target/usbh_diskio.c ****       break;
 437              		.loc 1 179 11 view .LVU99
 438 0040 0320     		movs	r0, #3
 439 0042 E7E7     		b	.L33
 440              	.L35:
 168:FATFS/Target/usbh_diskio.c ****     {
 441              		.loc 1 168 5 view .LVU100
 442 0044 0220     		movs	r0, #2
 443 0046 E5E7     		b	.L33
 444              	.L37:
 179:FATFS/Target/usbh_diskio.c ****       break;
 445              		.loc 1 179 11 view .LVU101
 446 0048 0320     		movs	r0, #3
 447 004a E3E7     		b	.L33
 448              	.L38:
 183:FATFS/Target/usbh_diskio.c ****       break;
 449              		.loc 1 183 11 view .LVU102
 450 004c 0120     		movs	r0, #1
 451 004e E1E7     		b	.L33
 452              	.L44:
 453              		.align	2
 454              	.L43:
 455 0050 00000000 		.word	hUsbHostFS
 456              		.cfi_endproc
 457              	.LFE154:
 459              		.global	USBH_Driver
 460              		.section	.rodata.USBH_Driver,"a"
 461              		.align	2
 464              	USBH_Driver:
 465 0000 00000000 		.word	USBH_initialize
 466 0004 00000000 		.word	USBH_status
 467 0008 00000000 		.word	USBH_read
 468 000c 00000000 		.word	USBH_write
 469 0010 00000000 		.word	USBH_ioctl
 470              		.text
 471              	.Letext0:
 472              		.file 2 "Middlewares/Third_Party/FatFs/src/integer.h"
 473              		.file 3 "Middlewares/Third_Party/FatFs/src/diskio.h"
 474              		.file 4 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 475              		.file 5 "Drivers/CMSIS/Include/core_cm7.h"
 476              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 477              		.file 7 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 478              		.file 8 "/usr/include/newlib/sys/_types.h"
 479              		.file 9 "/usr/include/newlib/sys/reent.h"
ARM GAS  /tmp/ccufDcnU.s 			page 15


 480              		.file 10 "/usr/include/newlib/sys/lock.h"
 481              		.file 11 "/usr/include/newlib/math.h"
 482              		.file 12 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 483              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 484              		.file 14 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 485              		.file 15 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 486              		.file 16 "/usr/include/newlib/stdlib.h"
 487              		.file 17 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 488              		.file 18 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_def.h"
 489              		.file 19 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_ctlreq.h"
 490              		.file 20 "Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc/usbh_msc_scsi.h"
 491              		.file 21 "Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc/usbh_msc.h"
 492              		.file 22 "Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 493              		.file 23 "FATFS/Target/usbh_diskio.h"
ARM GAS  /tmp/ccufDcnU.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usbh_diskio.c
     /tmp/ccufDcnU.s:17     .text.USBH_initialize:0000000000000000 $t
     /tmp/ccufDcnU.s:25     .text.USBH_initialize:0000000000000000 USBH_initialize
     /tmp/ccufDcnU.s:44     .text.USBH_status:0000000000000000 $t
     /tmp/ccufDcnU.s:51     .text.USBH_status:0000000000000000 USBH_status
     /tmp/ccufDcnU.s:91     .text.USBH_status:0000000000000014 $d
     /tmp/ccufDcnU.s:96     .text.USBH_read:0000000000000000 $t
     /tmp/ccufDcnU.s:103    .text.USBH_read:0000000000000000 USBH_read
     /tmp/ccufDcnU.s:185    .text.USBH_read:0000000000000044 $d
     /tmp/ccufDcnU.s:190    .text.USBH_ioctl:0000000000000000 $t
     /tmp/ccufDcnU.s:197    .text.USBH_ioctl:0000000000000000 USBH_ioctl
     /tmp/ccufDcnU.s:224    .text.USBH_ioctl:0000000000000010 $d
     /tmp/ccufDcnU.s:228    .text.USBH_ioctl:0000000000000014 $t
     /tmp/ccufDcnU.s:347    .text.USBH_ioctl:0000000000000068 $d
     /tmp/ccufDcnU.s:352    .text.USBH_write:0000000000000000 $t
     /tmp/ccufDcnU.s:359    .text.USBH_write:0000000000000000 USBH_write
     /tmp/ccufDcnU.s:455    .text.USBH_write:0000000000000050 $d
     /tmp/ccufDcnU.s:464    .rodata.USBH_Driver:0000000000000000 USBH_Driver
     /tmp/ccufDcnU.s:461    .rodata.USBH_Driver:0000000000000000 $d

UNDEFINED SYMBOLS
USBH_MSC_UnitIsReady
hUsbHostFS
USBH_MSC_Read
USBH_MSC_GetLUNInfo
USBH_MSC_Write
