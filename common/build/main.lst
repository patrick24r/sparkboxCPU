ARM GAS  /tmp/cc7gFobb.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"main.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
  17              		.align	1
  18              		.global	HAL_TIM_PeriodElapsedCallback
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	HAL_TIM_PeriodElapsedCallback:
  26              	.LVL0:
  27              	.LFB153:
  28              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/main.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/main.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                             www.st.com/SLA0044
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "cmsis_os.h"
  23:Core/Src/main.c **** #include "dac.h"
  24:Core/Src/main.c **** #include "eth.h"
  25:Core/Src/main.c **** #include "fatfs.h"
  26:Core/Src/main.c **** #include "rng.h"
  27:Core/Src/main.c **** #include "tim.h"
  28:Core/Src/main.c **** #include "usart.h"
  29:Core/Src/main.c **** #include "usb_host.h"
  30:Core/Src/main.c **** #include "gpio.h"
ARM GAS  /tmp/cc7gFobb.s 			page 2


  31:Core/Src/main.c **** #include "fmc.h"
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END Includes */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PTD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  44:Core/Src/main.c **** /* USER CODE BEGIN PD */
  45:Core/Src/main.c **** /* USER CODE END PD */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  48:Core/Src/main.c **** /* USER CODE BEGIN PM */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE END PM */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE BEGIN PV */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* USER CODE END PV */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  59:Core/Src/main.c **** void SystemClock_Config(void);
  60:Core/Src/main.c **** void MX_FREERTOS_Init(void);
  61:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* USER CODE END PFP */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  66:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* USER CODE END 0 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /**
  71:Core/Src/main.c ****   * @brief  The application entry point.
  72:Core/Src/main.c ****   * @retval int
  73:Core/Src/main.c ****   */
  74:Core/Src/main.c **** int main(void)
  75:Core/Src/main.c **** {
  76:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* USER CODE END 1 */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  83:Core/Src/main.c ****   HAL_Init();
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE END Init */
ARM GAS  /tmp/cc7gFobb.s 			page 3


  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* Configure the system clock */
  90:Core/Src/main.c ****   SystemClock_Config();
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* USER CODE END SysInit */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* Initialize all configured peripherals */
  97:Core/Src/main.c ****   MX_GPIO_Init();
  98:Core/Src/main.c ****   MX_DAC1_Init();
  99:Core/Src/main.c ****   MX_ETH_Init();
 100:Core/Src/main.c ****   MX_FMC_Init();
 101:Core/Src/main.c ****   MX_RNG_Init();
 102:Core/Src/main.c ****   MX_TIM7_Init();
 103:Core/Src/main.c ****   MX_USART3_UART_Init();
 104:Core/Src/main.c ****   MX_FATFS_Init();
 105:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* USER CODE END 2 */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* Init scheduler */
 110:Core/Src/main.c ****   osKernelInitialize();  /* Call init function for freertos objects (in freertos.c) */
 111:Core/Src/main.c ****   MX_FREERTOS_Init();
 112:Core/Src/main.c ****   /* Start scheduler */
 113:Core/Src/main.c ****   osKernelStart();
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 116:Core/Src/main.c ****   /* Infinite loop */
 117:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 118:Core/Src/main.c ****   while (1)
 119:Core/Src/main.c ****   {
 120:Core/Src/main.c ****     /* USER CODE END WHILE */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 123:Core/Src/main.c ****   }
 124:Core/Src/main.c ****   /* USER CODE END 3 */
 125:Core/Src/main.c **** }
 126:Core/Src/main.c **** 
 127:Core/Src/main.c **** /**
 128:Core/Src/main.c ****   * @brief System Clock Configuration
 129:Core/Src/main.c ****   * @retval None
 130:Core/Src/main.c ****   */
 131:Core/Src/main.c **** void SystemClock_Config(void)
 132:Core/Src/main.c **** {
 133:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 134:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   /** Supply configuration update enable
 137:Core/Src/main.c ****   */
 138:Core/Src/main.c ****   HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
 139:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 140:Core/Src/main.c ****   */
 141:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 144:Core/Src/main.c ****   /** Macro to configure the PLL clock source
ARM GAS  /tmp/cc7gFobb.s 			page 4


 145:Core/Src/main.c ****   */
 146:Core/Src/main.c ****   __HAL_RCC_PLL_PLLSOURCE_CONFIG(RCC_PLLSOURCE_HSE);
 147:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 148:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 149:Core/Src/main.c ****   */
 150:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI48|RCC_OSCILLATORTYPE_HSE;
 151:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 152:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 240;
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = 2;
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 8;
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_1;
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 163:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 164:Core/Src/main.c ****   {
 165:Core/Src/main.c ****     Error_Handler();
 166:Core/Src/main.c ****   }
 167:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 168:Core/Src/main.c ****   */
 169:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 170:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 171:Core/Src/main.c ****                               |RCC_CLOCKTYPE_D3PCLK1|RCC_CLOCKTYPE_D1PCLK1;
 172:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 173:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 174:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 175:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV1;
 176:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV1;
 177:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV1;
 178:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV1;
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 181:Core/Src/main.c ****   {
 182:Core/Src/main.c ****     Error_Handler();
 183:Core/Src/main.c ****   }
 184:Core/Src/main.c **** }
 185:Core/Src/main.c **** 
 186:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 187:Core/Src/main.c **** 
 188:Core/Src/main.c **** /* USER CODE END 4 */
 189:Core/Src/main.c **** 
 190:Core/Src/main.c **** /**
 191:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 192:Core/Src/main.c ****   * @note   This function is called  when TIM6 interrupt took place, inside
 193:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 194:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 195:Core/Src/main.c ****   * @param  htim : TIM handle
 196:Core/Src/main.c ****   * @retval None
 197:Core/Src/main.c ****   */
 198:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 199:Core/Src/main.c **** {
  29              		.loc 1 199 1 view -0
  30              		.cfi_startproc
ARM GAS  /tmp/cc7gFobb.s 			page 5


  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 199 1 is_stmt 0 view .LVU1
  34 0000 08B5     		push	{r3, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 3, -8
  38              		.cfi_offset 14, -4
 200:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 201:Core/Src/main.c **** 
 202:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 203:Core/Src/main.c ****   if (htim->Instance == TIM6) {
  39              		.loc 1 203 3 is_stmt 1 view .LVU2
  40              		.loc 1 203 11 is_stmt 0 view .LVU3
  41 0002 0268     		ldr	r2, [r0]
  42              		.loc 1 203 6 view .LVU4
  43 0004 034B     		ldr	r3, .L5
  44 0006 9A42     		cmp	r2, r3
  45 0008 00D0     		beq	.L4
  46              	.LVL1:
  47              	.L1:
 204:Core/Src/main.c ****     HAL_IncTick();
 205:Core/Src/main.c ****   }
 206:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 209:Core/Src/main.c **** }
  48              		.loc 1 209 1 view .LVU5
  49 000a 08BD     		pop	{r3, pc}
  50              	.LVL2:
  51              	.L4:
 204:Core/Src/main.c ****     HAL_IncTick();
  52              		.loc 1 204 5 is_stmt 1 view .LVU6
  53 000c FFF7FEFF 		bl	HAL_IncTick
  54              	.LVL3:
  55              		.loc 1 209 1 is_stmt 0 view .LVU7
  56 0010 FBE7     		b	.L1
  57              	.L6:
  58 0012 00BF     		.align	2
  59              	.L5:
  60 0014 00100040 		.word	1073745920
  61              		.cfi_endproc
  62              	.LFE153:
  64              		.section	.text.Error_Handler,"ax",%progbits
  65              		.align	1
  66              		.global	Error_Handler
  67              		.syntax unified
  68              		.thumb
  69              		.thumb_func
  70              		.fpu fpv5-d16
  72              	Error_Handler:
  73              	.LFB154:
 210:Core/Src/main.c **** 
 211:Core/Src/main.c **** /**
 212:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 213:Core/Src/main.c ****   * @retval None
 214:Core/Src/main.c ****   */
ARM GAS  /tmp/cc7gFobb.s 			page 6


 215:Core/Src/main.c **** void Error_Handler(void)
 216:Core/Src/main.c **** {
  74              		.loc 1 216 1 is_stmt 1 view -0
  75              		.cfi_startproc
  76              		@ Volatile: function does not return.
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79              		@ link register save eliminated.
 217:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 218:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 219:Core/Src/main.c ****   __disable_irq();
  80              		.loc 1 219 3 view .LVU9
  81              	.LBB4:
  82              	.LBI4:
  83              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/cc7gFobb.s 			page 7


  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  /tmp/cc7gFobb.s 			page 8


 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
ARM GAS  /tmp/cc7gFobb.s 			page 9


 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  84              		.loc 2 207 27 view .LVU10
  85              	.LBB5:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  86              		.loc 2 209 3 view .LVU11
  87              		.syntax unified
ARM GAS  /tmp/cc7gFobb.s 			page 10


  88              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  89 0000 72B6     		cpsid i
  90              	@ 0 "" 2
  91              		.thumb
  92              		.syntax unified
  93              	.L8:
  94              	.LBE5:
  95              	.LBE4:
 220:Core/Src/main.c ****   while (1)
  96              		.loc 1 220 3 discriminator 1 view .LVU12
 221:Core/Src/main.c ****   {
 222:Core/Src/main.c ****   }
  97              		.loc 1 222 3 discriminator 1 view .LVU13
 220:Core/Src/main.c ****   while (1)
  98              		.loc 1 220 9 discriminator 1 view .LVU14
  99 0002 FEE7     		b	.L8
 100              		.cfi_endproc
 101              	.LFE154:
 103              		.section	.text.SystemClock_Config,"ax",%progbits
 104              		.align	1
 105              		.global	SystemClock_Config
 106              		.syntax unified
 107              		.thumb
 108              		.thumb_func
 109              		.fpu fpv5-d16
 111              	SystemClock_Config:
 112              	.LFB152:
 132:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 113              		.loc 1 132 1 view -0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 112
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117 0000 00B5     		push	{lr}
 118              	.LCFI1:
 119              		.cfi_def_cfa_offset 4
 120              		.cfi_offset 14, -4
 121 0002 9DB0     		sub	sp, sp, #116
 122              	.LCFI2:
 123              		.cfi_def_cfa_offset 120
 133:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 124              		.loc 1 133 3 view .LVU16
 133:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 125              		.loc 1 133 22 is_stmt 0 view .LVU17
 126 0004 4C22     		movs	r2, #76
 127 0006 0021     		movs	r1, #0
 128 0008 09A8     		add	r0, sp, #36
 129 000a FFF7FEFF 		bl	memset
 130              	.LVL4:
 134:Core/Src/main.c **** 
 131              		.loc 1 134 3 is_stmt 1 view .LVU18
 134:Core/Src/main.c **** 
 132              		.loc 1 134 22 is_stmt 0 view .LVU19
 133 000e 2022     		movs	r2, #32
 134 0010 0021     		movs	r1, #0
 135 0012 01A8     		add	r0, sp, #4
 136 0014 FFF7FEFF 		bl	memset
 137              	.LVL5:
ARM GAS  /tmp/cc7gFobb.s 			page 11


 138:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 138              		.loc 1 138 3 is_stmt 1 view .LVU20
 139 0018 0220     		movs	r0, #2
 140 001a FFF7FEFF 		bl	HAL_PWREx_ConfigSupply
 141              	.LVL6:
 141:Core/Src/main.c **** 
 142              		.loc 1 141 3 view .LVU21
 143              	.LBB6:
 141:Core/Src/main.c **** 
 144              		.loc 1 141 3 view .LVU22
 145 001e 0023     		movs	r3, #0
 146 0020 0093     		str	r3, [sp]
 141:Core/Src/main.c **** 
 147              		.loc 1 141 3 view .LVU23
 141:Core/Src/main.c **** 
 148              		.loc 1 141 3 view .LVU24
 149 0022 294B     		ldr	r3, .L16
 150 0024 DA6A     		ldr	r2, [r3, #44]
 151 0026 22F00102 		bic	r2, r2, #1
 152 002a DA62     		str	r2, [r3, #44]
 141:Core/Src/main.c **** 
 153              		.loc 1 141 3 view .LVU25
 154 002c DB6A     		ldr	r3, [r3, #44]
 155 002e 03F00103 		and	r3, r3, #1
 156 0032 0093     		str	r3, [sp]
 141:Core/Src/main.c **** 
 157              		.loc 1 141 3 view .LVU26
 158 0034 254A     		ldr	r2, .L16+4
 159 0036 9369     		ldr	r3, [r2, #24]
 160 0038 23F44043 		bic	r3, r3, #49152
 161 003c 43F40043 		orr	r3, r3, #32768
 162 0040 9361     		str	r3, [r2, #24]
 141:Core/Src/main.c **** 
 163              		.loc 1 141 3 view .LVU27
 164 0042 9369     		ldr	r3, [r2, #24]
 165 0044 03F44043 		and	r3, r3, #49152
 166 0048 0093     		str	r3, [sp]
 141:Core/Src/main.c **** 
 167              		.loc 1 141 3 view .LVU28
 168 004a 009B     		ldr	r3, [sp]
 169              	.LBE6:
 141:Core/Src/main.c **** 
 170              		.loc 1 141 3 view .LVU29
 143:Core/Src/main.c ****   /** Macro to configure the PLL clock source
 171              		.loc 1 143 3 view .LVU30
 172              	.L10:
 143:Core/Src/main.c ****   /** Macro to configure the PLL clock source
 173              		.loc 1 143 48 discriminator 1 view .LVU31
 143:Core/Src/main.c ****   /** Macro to configure the PLL clock source
 174              		.loc 1 143 8 discriminator 1 view .LVU32
 143:Core/Src/main.c ****   /** Macro to configure the PLL clock source
 175              		.loc 1 143 10 is_stmt 0 discriminator 1 view .LVU33
 176 004c 1F4B     		ldr	r3, .L16+4
 177 004e 9B69     		ldr	r3, [r3, #24]
 143:Core/Src/main.c ****   /** Macro to configure the PLL clock source
 178              		.loc 1 143 8 discriminator 1 view .LVU34
 179 0050 13F4005F 		tst	r3, #8192
ARM GAS  /tmp/cc7gFobb.s 			page 12


 180 0054 FAD0     		beq	.L10
 146:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 181              		.loc 1 146 3 is_stmt 1 view .LVU35
 182 0056 1E4A     		ldr	r2, .L16+8
 183 0058 936A     		ldr	r3, [r2, #40]
 184 005a 23F00303 		bic	r3, r3, #3
 185 005e 43F00203 		orr	r3, r3, #2
 186 0062 9362     		str	r3, [r2, #40]
 150:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 187              		.loc 1 150 3 view .LVU36
 150:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 188              		.loc 1 150 36 is_stmt 0 view .LVU37
 189 0064 2123     		movs	r3, #33
 190 0066 0993     		str	r3, [sp, #36]
 151:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 191              		.loc 1 151 3 is_stmt 1 view .LVU38
 151:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 192              		.loc 1 151 30 is_stmt 0 view .LVU39
 193 0068 4FF48033 		mov	r3, #65536
 194 006c 0A93     		str	r3, [sp, #40]
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 195              		.loc 1 152 3 is_stmt 1 view .LVU40
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 196              		.loc 1 152 32 is_stmt 0 view .LVU41
 197 006e 0123     		movs	r3, #1
 198 0070 0F93     		str	r3, [sp, #60]
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 199              		.loc 1 153 3 is_stmt 1 view .LVU42
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 200              		.loc 1 153 34 is_stmt 0 view .LVU43
 201 0072 0223     		movs	r3, #2
 202 0074 1293     		str	r3, [sp, #72]
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 203              		.loc 1 154 3 is_stmt 1 view .LVU44
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 204              		.loc 1 154 35 is_stmt 0 view .LVU45
 205 0076 1393     		str	r3, [sp, #76]
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 240;
 206              		.loc 1 155 3 is_stmt 1 view .LVU46
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 240;
 207              		.loc 1 155 30 is_stmt 0 view .LVU47
 208 0078 0422     		movs	r2, #4
 209 007a 1492     		str	r2, [sp, #80]
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = 2;
 210              		.loc 1 156 3 is_stmt 1 view .LVU48
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = 2;
 211              		.loc 1 156 30 is_stmt 0 view .LVU49
 212 007c F021     		movs	r1, #240
 213 007e 1591     		str	r1, [sp, #84]
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 8;
 214              		.loc 1 157 3 is_stmt 1 view .LVU50
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 8;
 215              		.loc 1 157 30 is_stmt 0 view .LVU51
 216 0080 1693     		str	r3, [sp, #88]
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 217              		.loc 1 158 3 is_stmt 1 view .LVU52
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
ARM GAS  /tmp/cc7gFobb.s 			page 13


 218              		.loc 1 158 30 is_stmt 0 view .LVU53
 219 0082 0821     		movs	r1, #8
 220 0084 1791     		str	r1, [sp, #92]
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_1;
 221              		.loc 1 159 3 is_stmt 1 view .LVU54
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_1;
 222              		.loc 1 159 30 is_stmt 0 view .LVU55
 223 0086 1893     		str	r3, [sp, #96]
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 224              		.loc 1 160 3 is_stmt 1 view .LVU56
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 225              		.loc 1 160 32 is_stmt 0 view .LVU57
 226 0088 1992     		str	r2, [sp, #100]
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 227              		.loc 1 161 3 is_stmt 1 view .LVU58
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 228              		.loc 1 161 35 is_stmt 0 view .LVU59
 229 008a 0023     		movs	r3, #0
 230 008c 1A93     		str	r3, [sp, #104]
 162:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 231              		.loc 1 162 3 is_stmt 1 view .LVU60
 162:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 232              		.loc 1 162 34 is_stmt 0 view .LVU61
 233 008e 1B93     		str	r3, [sp, #108]
 163:Core/Src/main.c ****   {
 234              		.loc 1 163 3 is_stmt 1 view .LVU62
 163:Core/Src/main.c ****   {
 235              		.loc 1 163 7 is_stmt 0 view .LVU63
 236 0090 09A8     		add	r0, sp, #36
 237 0092 FFF7FEFF 		bl	HAL_RCC_OscConfig
 238              	.LVL7:
 163:Core/Src/main.c ****   {
 239              		.loc 1 163 6 view .LVU64
 240 0096 98B9     		cbnz	r0, .L14
 169:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 241              		.loc 1 169 3 is_stmt 1 view .LVU65
 169:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 242              		.loc 1 169 31 is_stmt 0 view .LVU66
 243 0098 3F23     		movs	r3, #63
 244 009a 0193     		str	r3, [sp, #4]
 172:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 245              		.loc 1 172 3 is_stmt 1 view .LVU67
 172:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 246              		.loc 1 172 34 is_stmt 0 view .LVU68
 247 009c 0323     		movs	r3, #3
 248 009e 0293     		str	r3, [sp, #8]
 173:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 249              		.loc 1 173 3 is_stmt 1 view .LVU69
 173:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 250              		.loc 1 173 35 is_stmt 0 view .LVU70
 251 00a0 0023     		movs	r3, #0
 252 00a2 0393     		str	r3, [sp, #12]
 174:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV1;
 253              		.loc 1 174 3 is_stmt 1 view .LVU71
 174:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV1;
 254              		.loc 1 174 35 is_stmt 0 view .LVU72
 255 00a4 0822     		movs	r2, #8
ARM GAS  /tmp/cc7gFobb.s 			page 14


 256 00a6 0492     		str	r2, [sp, #16]
 175:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV1;
 257              		.loc 1 175 3 is_stmt 1 view .LVU73
 175:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV1;
 258              		.loc 1 175 36 is_stmt 0 view .LVU74
 259 00a8 0593     		str	r3, [sp, #20]
 176:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV1;
 260              		.loc 1 176 3 is_stmt 1 view .LVU75
 176:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV1;
 261              		.loc 1 176 36 is_stmt 0 view .LVU76
 262 00aa 0693     		str	r3, [sp, #24]
 177:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV1;
 263              		.loc 1 177 3 is_stmt 1 view .LVU77
 177:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV1;
 264              		.loc 1 177 36 is_stmt 0 view .LVU78
 265 00ac 0793     		str	r3, [sp, #28]
 178:Core/Src/main.c **** 
 266              		.loc 1 178 3 is_stmt 1 view .LVU79
 178:Core/Src/main.c **** 
 267              		.loc 1 178 36 is_stmt 0 view .LVU80
 268 00ae 0893     		str	r3, [sp, #32]
 180:Core/Src/main.c ****   {
 269              		.loc 1 180 3 is_stmt 1 view .LVU81
 180:Core/Src/main.c ****   {
 270              		.loc 1 180 7 is_stmt 0 view .LVU82
 271 00b0 0221     		movs	r1, #2
 272 00b2 01A8     		add	r0, sp, #4
 273 00b4 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 274              	.LVL8:
 180:Core/Src/main.c ****   {
 275              		.loc 1 180 6 view .LVU83
 276 00b8 20B9     		cbnz	r0, .L15
 184:Core/Src/main.c **** 
 277              		.loc 1 184 1 view .LVU84
 278 00ba 1DB0     		add	sp, sp, #116
 279              	.LCFI3:
 280              		.cfi_remember_state
 281              		.cfi_def_cfa_offset 4
 282              		@ sp needed
 283 00bc 5DF804FB 		ldr	pc, [sp], #4
 284              	.L14:
 285              	.LCFI4:
 286              		.cfi_restore_state
 165:Core/Src/main.c ****   }
 287              		.loc 1 165 5 is_stmt 1 view .LVU85
 288 00c0 FFF7FEFF 		bl	Error_Handler
 289              	.LVL9:
 290              	.L15:
 182:Core/Src/main.c ****   }
 291              		.loc 1 182 5 view .LVU86
 292 00c4 FFF7FEFF 		bl	Error_Handler
 293              	.LVL10:
 294              	.L17:
 295              		.align	2
 296              	.L16:
 297 00c8 00040058 		.word	1476396032
 298 00cc 00480258 		.word	1476544512
ARM GAS  /tmp/cc7gFobb.s 			page 15


 299 00d0 00440258 		.word	1476543488
 300              		.cfi_endproc
 301              	.LFE152:
 303              		.section	.text.main,"ax",%progbits
 304              		.align	1
 305              		.global	main
 306              		.syntax unified
 307              		.thumb
 308              		.thumb_func
 309              		.fpu fpv5-d16
 311              	main:
 312              	.LFB151:
  75:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 313              		.loc 1 75 1 view -0
 314              		.cfi_startproc
 315              		@ Volatile: function does not return.
 316              		@ args = 0, pretend = 0, frame = 0
 317              		@ frame_needed = 0, uses_anonymous_args = 0
 318 0000 08B5     		push	{r3, lr}
 319              	.LCFI5:
 320              		.cfi_def_cfa_offset 8
 321              		.cfi_offset 3, -8
 322              		.cfi_offset 14, -4
  83:Core/Src/main.c **** 
 323              		.loc 1 83 3 view .LVU88
 324 0002 FFF7FEFF 		bl	HAL_Init
 325              	.LVL11:
  90:Core/Src/main.c **** 
 326              		.loc 1 90 3 view .LVU89
 327 0006 FFF7FEFF 		bl	SystemClock_Config
 328              	.LVL12:
  97:Core/Src/main.c ****   MX_DAC1_Init();
 329              		.loc 1 97 3 view .LVU90
 330 000a FFF7FEFF 		bl	MX_GPIO_Init
 331              	.LVL13:
  98:Core/Src/main.c ****   MX_ETH_Init();
 332              		.loc 1 98 3 view .LVU91
 333 000e FFF7FEFF 		bl	MX_DAC1_Init
 334              	.LVL14:
  99:Core/Src/main.c ****   MX_FMC_Init();
 335              		.loc 1 99 3 view .LVU92
 336 0012 FFF7FEFF 		bl	MX_ETH_Init
 337              	.LVL15:
 100:Core/Src/main.c ****   MX_RNG_Init();
 338              		.loc 1 100 3 view .LVU93
 339 0016 FFF7FEFF 		bl	MX_FMC_Init
 340              	.LVL16:
 101:Core/Src/main.c ****   MX_TIM7_Init();
 341              		.loc 1 101 3 view .LVU94
 342 001a FFF7FEFF 		bl	MX_RNG_Init
 343              	.LVL17:
 102:Core/Src/main.c ****   MX_USART3_UART_Init();
 344              		.loc 1 102 3 view .LVU95
 345 001e FFF7FEFF 		bl	MX_TIM7_Init
 346              	.LVL18:
 103:Core/Src/main.c ****   MX_FATFS_Init();
 347              		.loc 1 103 3 view .LVU96
ARM GAS  /tmp/cc7gFobb.s 			page 16


 348 0022 FFF7FEFF 		bl	MX_USART3_UART_Init
 349              	.LVL19:
 104:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 350              		.loc 1 104 3 view .LVU97
 351 0026 FFF7FEFF 		bl	MX_FATFS_Init
 352              	.LVL20:
 110:Core/Src/main.c ****   MX_FREERTOS_Init();
 353              		.loc 1 110 3 view .LVU98
 354 002a FFF7FEFF 		bl	osKernelInitialize
 355              	.LVL21:
 111:Core/Src/main.c ****   /* Start scheduler */
 356              		.loc 1 111 3 view .LVU99
 357 002e FFF7FEFF 		bl	MX_FREERTOS_Init
 358              	.LVL22:
 113:Core/Src/main.c **** 
 359              		.loc 1 113 3 view .LVU100
 360 0032 FFF7FEFF 		bl	osKernelStart
 361              	.LVL23:
 362              	.L19:
 118:Core/Src/main.c ****   {
 363              		.loc 1 118 3 discriminator 1 view .LVU101
 123:Core/Src/main.c ****   /* USER CODE END 3 */
 364              		.loc 1 123 3 discriminator 1 view .LVU102
 118:Core/Src/main.c ****   {
 365              		.loc 1 118 9 discriminator 1 view .LVU103
 366 0036 FEE7     		b	.L19
 367              		.cfi_endproc
 368              	.LFE151:
 370              		.text
 371              	.Letext0:
 372              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 373              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 374              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 375              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 376              		.file 7 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 377              		.file 8 "/usr/include/newlib/sys/_types.h"
 378              		.file 9 "/usr/include/newlib/sys/reent.h"
 379              		.file 10 "/usr/include/newlib/sys/lock.h"
 380              		.file 11 "/usr/include/newlib/math.h"
 381              		.file 12 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 382              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
 383              		.file 14 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 384              		.file 15 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_mdma.h"
 385              		.file 16 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_eth.h"
 386              		.file 17 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dac.h"
 387              		.file 18 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 388              		.file 19 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_fmc.h"
 389              		.file 20 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_sram.h"
 390              		.file 21 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rng.h"
 391              		.file 22 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_sdram.h"
 392              		.file 23 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_tim.h"
 393              		.file 24 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 394              		.file 25 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 395              		.file 26 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 396              		.file 27 "Core/Inc/dac.h"
 397              		.file 28 "Core/Inc/eth.h"
 398              		.file 29 "Middlewares/Third_Party/FatFs/src/integer.h"
ARM GAS  /tmp/cc7gFobb.s 			page 17


 399              		.file 30 "/usr/include/newlib/stdlib.h"
 400              		.file 31 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_def.h"
 401              		.file 32 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_ctlreq.h"
 402              		.file 33 "Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc/usbh_msc.h"
 403              		.file 34 "Middlewares/Third_Party/FatFs/src/ff.h"
 404              		.file 35 "Middlewares/Third_Party/FatFs/src/diskio.h"
 405              		.file 36 "Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 406              		.file 37 "FATFS/Target/usbh_diskio.h"
 407              		.file 38 "FATFS/App/fatfs.h"
 408              		.file 39 "Core/Inc/rng.h"
 409              		.file 40 "Core/Inc/tim.h"
 410              		.file 41 "Core/Inc/usart.h"
 411              		.file 42 "Core/Inc/fmc.h"
 412              		.file 43 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_pwr_ex.h"
 413              		.file 44 "Core/Inc/gpio.h"
 414              		.file 45 "<built-in>"
ARM GAS  /tmp/cc7gFobb.s 			page 18


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc7gFobb.s:17     .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/cc7gFobb.s:25     .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/cc7gFobb.s:60     .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
     /tmp/cc7gFobb.s:65     .text.Error_Handler:0000000000000000 $t
     /tmp/cc7gFobb.s:72     .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cc7gFobb.s:104    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cc7gFobb.s:111    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cc7gFobb.s:297    .text.SystemClock_Config:00000000000000c8 $d
     /tmp/cc7gFobb.s:304    .text.main:0000000000000000 $t
     /tmp/cc7gFobb.s:311    .text.main:0000000000000000 main

UNDEFINED SYMBOLS
HAL_IncTick
memset
HAL_PWREx_ConfigSupply
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_DAC1_Init
MX_ETH_Init
MX_FMC_Init
MX_RNG_Init
MX_TIM7_Init
MX_USART3_UART_Init
MX_FATFS_Init
osKernelInitialize
MX_FREERTOS_Init
osKernelStart
